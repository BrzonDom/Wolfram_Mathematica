(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    200797,       3984]
NotebookOptionsPosition[    195885,       3895]
NotebookOutlinePosition[    196294,       3911]
CellTagsIndexPosition[    196251,       3908]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["VYA - P\[RHacek]edn\[AAcute]\[SHacek]ky", "Title",
 CellChangeTimes->{{3.8974152434733944`*^9, 3.8974152540210905`*^9}, {
  3.897415425449215*^9, 
  3.897415428416936*^9}},ExpressionUUID->"5433c399-b5f3-432e-9198-\
ec76379984c5"],

Cell[CellGroupData[{

Cell["10. P\[RHacek]edn\[AAcute]\[SHacek]ka", "Section",
 CellChangeTimes->{{3.9010125787753115`*^9, 
  3.9010125832848077`*^9}},ExpressionUUID->"0b44a0d2-8320-42fe-8cab-\
8862317df9d4"],

Cell[CellGroupData[{

Cell["Rozvoj periodick\[EAcute] funkce", "Subsection",
 CellChangeTimes->{{3.901013353127028*^9, 
  3.901013359811668*^9}},ExpressionUUID->"e9315972-3854-4db6-91d4-\
aa99469cfb72"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.901014226647122*^9, 3.9010142266491237`*^9}},
 CellLabel->
  "In[417]:=",ExpressionUUID->"337147f4-d0ad-44c2-9e6f-b3b497cb607d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Vyraz", " ", "=", " ", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "i", "]"}], "*", 
      RowBox[{"Cos", "[", 
       RowBox[{"i", " ", "*", 
        FractionBox[
         RowBox[{"2", "Pi"}], "T"], "*", " ", "t"}], "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"b", "[", "i", "]"}], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"i", " ", "*", 
        FractionBox[
         RowBox[{"2", "Pi"}], "T"], " ", "*", " ", "t"}], "]"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "0", ",", " ", "5"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{"Vyraz", " ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "t1", ",", " ", 
     RowBox[{"t1", " ", "+", " ", "T"}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Vyraz", " ", "*", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"2", "Pi", " ", "*", " ", "t"}], "T"], "]"}]}], ",", " ", 
     RowBox[{"Vyraz", " ", "*", " ", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"2", "Pi", " ", "*", " ", "t"}], "T"], "]"}]}]}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "t1", ",", " ", 
     RowBox[{"t1", " ", "+", " ", "T"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.901014169708338*^9, 3.9010142193359313`*^9}, {
   3.9010142858279266`*^9, 3.901014288462592*^9}, 3.9010143488010564`*^9, {
   3.9010144600819297`*^9, 3.901014521547539*^9}},
 CellLabel->
  "In[422]:=",ExpressionUUID->"ce2ff491-0928-4077-b71e-8ac137b2fd0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "[", "0", "]"}], "+", 
  RowBox[{
   RowBox[{"a", "[", "1", "]"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "2", "]"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"4", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "3", "]"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "4", "]"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"8", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"a", "[", "5", "]"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"10", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"b", "[", "1", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"b", "[", "2", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"4", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"b", "[", "3", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"6", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"b", "[", "4", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"8", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}], "+", 
  RowBox[{
   RowBox[{"b", "[", "5", "]"}], " ", 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"10", " ", "\[Pi]", " ", "t"}], "T"], "]"}]}]}]], "Output",
 CellChangeTimes->{3.9010142905479403`*^9, 3.9010143528125143`*^9, 
  3.9010145226869597`*^9},
 CellLabel->
  "Out[422]=",ExpressionUUID->"3426337a-8603-4d34-978f-bd0932c9ba2d"],

Cell[BoxData[
 RowBox[{"T", " ", 
  RowBox[{"a", "[", "0", "]"}]}]], "Output",
 CellChangeTimes->{3.9010142905479403`*^9, 3.9010143528125143`*^9, 
  3.901014524993641*^9},
 CellLabel->
  "Out[423]=",ExpressionUUID->"235446a2-52b5-4d64-a43b-0b9e394febcf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", "T", " ", 
    RowBox[{"a", "[", "1", "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", "T", " ", 
    RowBox[{"b", "[", "1", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.9010142905479403`*^9, 3.9010143528125143`*^9, 
  3.901014527217368*^9},
 CellLabel->
  "Out[424]=",ExpressionUUID->"ee783aa9-69ef-4952-b48f-3b9ce290eae2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.9010145837083087`*^9, 3.901014631833212*^9}, 
   3.9010147024843006`*^9},
 CellLabel->
  "In[427]:=",ExpressionUUID->"68c210ca-8dfc-433f-9d40-caf6f3695db6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "t_", "]"}], " ", ":=", " ", 
   RowBox[{"1", " ", "-", " ", 
    SuperscriptBox["t", "2"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "[", "0", "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["1", "T"], " ", "*", " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"f", "[", "t", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", " ", ",", "T"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "[", "i_Integer", "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["2", "T"], " ", "*", " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], " ", "*", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"i", " ", "*", " ", 
        FractionBox[
         RowBox[{"2", "Pi", " ", "*", " ", "t"}], "T"]}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "[", "i_Integer", "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["2", "T"], " ", "*", " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "t", "]"}], " ", "*", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"i", " ", "*", " ", 
        FractionBox[
         RowBox[{"2", "Pi", " ", "*", " ", "t"}], "T"]}], "]"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "T"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Vyraz", " ", "=", " ", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"a", "[", "i", "]"}], "*", 
       RowBox[{"Cos", "[", 
        RowBox[{"i", " ", "*", 
         FractionBox[
          RowBox[{"2", "Pi"}], "T"], "*", " ", "t"}], "]"}]}], " ", "+", " ", 
      RowBox[{
       RowBox[{"b", "[", "i", "]"}], "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"i", " ", "*", 
         FractionBox[
          RowBox[{"2", "Pi"}], "T"], " ", "*", " ", "t"}], "]"}]}]}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "0", ",", " ", "50"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "t", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"Vyraz", ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", 
     RowBox[{"-", "3"}], ",", " ", "3"}], "}"}]}], "]"}]}], "Input",
 CellLabel->
  "In[428]:=",ExpressionUUID->"e47c248b-5109-4db0-a203-643c715d0ead"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate", "izero", 
   "\"Integral and error estimates are 0 on all integration subregions. Try \
increasing the value of the MinRecursion option. If value of integral may be \
0, specify a finite value for the AccuracyGoal option.\"", 2, 433, 42, 
   31579964401561158852, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9010147937282715`*^9},
 CellLabel->
  "During evaluation of \
In[428]:=",ExpressionUUID->"31bd8c98-aded-4281-a6bb-7b3b1c05b6f5"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$322299#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-0.06960591185771986, 1.0891752068555374`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.9010147959795437`*^9},
 CellLabel->
  "Out[435]=",ExpressionUUID->"a3986d1e-6317-480f-8853-372caf3806c5"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
xTEsMq9+02BlVefbn+fk9vk8qg68lGQI+LsvTo+1PWZhFR7cnfy8aiCPdXmp
d2haUHVNZaSor6u+c3BsIcoIGRlF4KeosqLhFmGNBDeCmeaYcMDjsCJX9sbb
iAQ25urEJZ2nUo4czyho9Ua4rvLGRXt0fn6uvWc4QvFTY6PtPYOr3rDNbB7o
G/P4g06XVxNFp8WsyLJ656n6B441gRUizVVlHj/D0uTp09lBQhgdHBybnF1Z
WDh65OKiNTgzPc/x9OzkJEsQppn5kaEJm93V3zu4YHErkqII5ML0WFf3wKrH
tzS3ODo8vrJsHh4aHl9cFUTZZ13u7xmLsrppZnF0cHx6et7ldFFRSuKiNotd
V1VsJpIqdq2dr9bBEFhDKhWBUWgy82KRx8+G/CRDUytLc0uL8/Mzi2PTJgH4
/C502AyBxTpQ5en002kErbQ2NUUIrn9wfHRimSLJ5qaeKdOyyHmz04oJWjeb
XWQoNNjbv2BxyooyOTI8NjHdVNuUWdge4HUN2dkbk9nNAqsJ4dOHj7rcVG1D
W1tFp83GuszLOcVdPQthMkym5dW4aP2rw6fLaiYy6scvXukkGLmjtZeWdVHa
apnJPdw+rAmsHGmpqnB5WVWRss6nkhFqYnDgs+N5drdw6ky5S9D37PoqImh7
dx/1uAJH9mdarOy+Y6lWN7nvdFlYBJljZSpUUNZqF/Sj+055Q/KR0+kWL/NV
RoOXVI7uP1jTNFPYNvDVoUuLq9SJs1kr1khjy+jq8vLkjEeR9ViYvFax7Wbg
xC0sCrsgANcYMi0lLxxk8vJqAwGir7f/woWsoVFnSXX3lCsKbv4dJ/hGxCxs
LOfcNt4xPj5TXlHd2ztaUtpxuXRsLsQ3NnVlpF0Jh4mUExmZBa2hiPLZzgMO
G5maXTW97EnPLnOy+sz0cnOf3afpgqLe6IhozCVedzKc8tWXoSjT0dR64XDu
xDy55/OjY9MrAzOOyampiUVnNCycO5XnJXWG0wZ7Bq5UNZsdYRmZ/ztNzz90
rAmsyDSWlrpcJBUKZZ/Nnp1cmZhazS5qdweZkxcKGEk7sONAiOR3fXjYagsU
FY1AOHs+JY2SxVNfXoxCAaq4PDszPD7DqmLuhVxd19OyC6K8Vp1XuewKHU8p
8lF6gKZTTuRHWD0rPSMSEauqWyuqOghG0xXtpqe21wks+O0snXY+X1D0job2
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
r+81eflXXv/gVw8+dyazvqKprWNgYWZ6NSunat+eky+9szejsLGhZezU6bSH
H34hvaL9zQ/2Pf3KF5YwiC372APPPPr828+/tzscCdz304cffuzNz4+kOJBz
BQKLYrr/IAJr6HkfaDNKtnuCaYUVwHL2kL+ssQvUWoTmcqubwSi0d7dNWII1
9XVZxe1O4ExWCrOcN+zNzkzr6O6ZdrMTppWW/klwF9u6O20Rad7pb+jsHjS5
QGC9EbKkrKGhvW94wZmSXYeKJemMwkqzC57S6yDlsoY2N6MngtZt1zwW9OHY
TXdFoiW13T3DU7UtQwtu+lJGuZXmz+cVHb+Y0zZqau1oHZhYeGvXkdrB+SuF
tan5FZMm+/mMKznl9TOr7qzC6lPn00vruk5eyG7omAQ/LcSyFzPSalom+ufd
hcXFZgddUttyKj2rvL65qKp8/4Fzs2b/lbKaM6lXxi3ejz88fCG//lRWtYNg
c8sqz6UXNnWNugJUakbxmUvZ4/OLZRUVI1PW0xllq37eg0YwEqFNojmxKA9H
f1tgC30VjwvwEITiIYXxmZnq2o6x6ZX6rjEQ2+LGQS8HMUugsLLxSnXH+OTs
8eNnW4emS+uHPRB+0hItgEssJwusKosUI4QJUbU6z/737+oXzs3/6jeRB+4b
/7vvmO7/je6wmkxmsHoRgjp66Ku5RdkJzi0pBoO+nR/vmbQEXn53z6zV892/
+rFNAn+VS/ns076Zme/86XefeX3fSFtfelbtpJMeH1v4Yl+qk+Tf37k7u6iw
tWt5dXg5O6PyizcOz69GTl7OeenFd//y//wvf/2d7/zbix8/8+auKZME2sbP
hZ/98YNBWn/sqTd8rshrr38RIcQ333p+OqjawS8iFT/WWgaSZfbWg467B0bI
g6JX5OAproDvUmoaxDgeRp5dmJpzhCD8ibBcYV2PPaq2dLVnFjeZnKH0ohZ7
FLwasCBcRk6uzUt09TZNeelRk7lzZHpgZLy5ZyQM/UWK/ROzeU29TkZf9YSK
yxrmlleb+2ZtYeThBAk6p7QuQLJFxdUf7z+RX99rp1FUZWDbTYibHgaZZh8h
lZRVljZ0m22BoqrGwo7ZeaujpXvEQYhpJQ0NHR2LVu+5tCK3qOdnlFoj4pzJ
sv+zg/tOpk+YzK29E55g9EpFs4/lTlwodqIYlrmQnumNijlVbQVFlYuWwMX0
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
g8aF2quLAhbzyuRSZ3OvDrZGjDZW1YS9tqHBYY4OdTXXqIbNusntE7EUsE7g
0qX5sY7qBprja67kQpTZ01SXn5oW8YSnRjpW5iYOf/pJX3/PcGtLTUnlyspC
QfalocHRiN862t9xJTN1aXIsP/3cotmGDShRknmmLL8kGPK1lmWCOCxPDRWn
nzfNzzVVVJw9/KXX5pjsaihKTyOiwaN73qsozO3rHhAlba63Mffy5VWrTRXD
HZV5hekZ4Wi4tboobHOVF5awFHqtGN6H+bZstwJWiZV5X2VqqndpLD/zXHlh
ntk0Pzo04vM7y6vqeOhW3tXeVDsy0LU4NVqamSlxHogTCQ69XkW7WjwFMkv5
ct57TS8tnvzZT4MvPW19+qGF+3+vO+0+0xJWgP7cc8doJ4EDTPBt3Kc+/wR8
3v17Dvn8vl/+8/0kqGWVLj2y37S6eGTfkbKSAl9P+buPP7n/y8OmpbkDO3aT
Ec+7zzzfWJE72jMVmJyuyMg+9fa7U5Pu8qKs5dbeH/3pn3+2c++bH+3b+fbr
C1OugfbOI88/veODnYPj46Jp+PV/++EX+z7ev/f9X/zzj+trGgZ6RkWd3HXf
zz3OoHms7oOXnx1Z8IngUfnn9726w7W68uZ7u3Ivnso6UzDT1V1X104poLs4
7dv+VhEJxIrsbap1rKwAOwVd84vzMyLyQ+iO1haKJ6f7age7ur325aqySl7U
BZGQeHq4vcG6ODk12Gz2BK2rC7PjwxG3ub+tQRcl5+Jkc13ZvHkZuTp8sLe1
GqISj9k8PTQqCpIuRFpqqhWWKs/LaW6oqqstl9AMvqjd5DiAsSk30d1Q1N/d
41gy9Q50tXf0hr3WzqY6gQ7WlFYMdbcF7O7SrAxRZJvy8/w+OhzxdtWXppxK
ca6OVpeUQ83LCwupgD0zu1CEoFWOluZdFqhQa3NzS2lGyO0AwVdlurLgMuWx
Dzb3imFfxqkj1aWFnR1th3bv9HjdxTlpbstkZV4ZePtNRemBhZmpgQkyYu+o
K26pLq3KzXUGGYgldZWPD8Xceq/xshAZ7S5fXlxaHm5Znl+ZnRpqrcqempwJ
hXwFJRUiisSduee/7Ovt1UTy8qHPmkur29p7GBEFOFeVVo7WQ+6c997UvZZo
9sWF3//G9+JzekOpzgU9Kyb8NkP3TF/mucP7eIEPBQPuhd7XH/j5nl17Hvxf
bwzOre598/nFBTvo5I+fe5XgZNbj1Ykg0LqzbpiR+cjKzOGdB2nS9+nrL/Q1
FnQ3Di6095Rl5Zx55xOnM1pdnLnUPPAvf/Mjiy0Uotm9bzztd9IqRS031U9P
L7ACzS8O559OZTVdZ21P/dP3pvr6L5065Yw6dvzicaefJiJeS2/h52cvVzR2
E67Z7K/Aow69/+q7hefPdTV3z3YUd7TXEaqOX2B9pyXuFsGTo90tUY9T4cBh
EAebyii0+UbUY1lsra+lGH9V4YGmyvymkqKLX51eWfVNzo/MDvW77VboPtNc
z9ziMoiIaXqkpa5MpiEyZUQIpphga1MlFB50LPa3VrMRX0193eT0PDLlfLi1
tgYCYZUjnMuTk2P9tyawPHqJm0QONZc2VNVSZDjt5OnpheWwa763tZ2nQ43V
NSO97R6LvSQjHQK3upxskmQbawqIgDMrPc1hnpgaG9fIYGt9jSpHsy5mCaKq
SkRJTipE7nNDNSmH9rqtnoL0TEnkq4rPsSHzQGOHFokU5VyCwJxjiaO7dkUj
RH5aStA+W1lQL3JMR2lucN40NT5GkJ7+1qLe+sKSvFKrK4rDWFzb2yOw5MxA
s8/lgdjMbRqYX1iZHBse6apqbmxfWZgdHhkHxaOLtuyUIy09kwJLlGakCRJb
lp4SJhlducrID5zkKD0UCBw8ontcetCtj/frzhU96tRlymFZQqwuRnXG2V55
5d//57/seueVisKspSUP8qkWGsvK88WI+7UnnvrFj/4/t9XNqzoePYiGp7rn
B0YpGW50XNr/4c+//32b1c/67L//2b98+MJLrXXNJafTwm66p6nKMTW7ODr4
kx/8aMeuvXkpJ0g/qYFDwnOqrIoSza/O1ecVABF1IfjFS2/pbHTPW8/84ic/
GJoZjURcv/v37z31wC8DDHF+1z7K56u+UgUu4tmjxwYqcr/c9dGLjz4ficpI
Z6Kxx7vqVYY3IbBUXWleyvFjhTl5Ch3oAfMniko0sNDfK7icGRe+tMzOqIIg
c96Rrk6dj3Q1lLTXV585dTIrNYULu8pycrvqarzm+VNfHTp3KmW4q7UiLyPt
/IlgyCvzEBMRnQ0VWRdORRyWxqoKDRxOkejvaNM1uTjtfGbKCU6QZCSwN+sS
x95lTIdtC+P9IxDDjLXUUSEGntJcXnzxdAoVJJdnhgiPvbWyHK4cqK+jKWZp
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
6rl9WcVVmhp9/Vf/6PL7dTn6xWsfBVkkKhD/OtvreitaUR4Hr9qX5gZ626hI
IBrysFRUJqKU3+daWbbOTlJ+h0BGuEh4Yrg/QESclqWFmSkJjRijZJtH/vq7
hEean5kXOG5qZGR2Yljn2bnhyfmpSbfdNj0yZJ6dgg5anZ2YH59dXTGrHDs+
2LW4MOOwmVob6ikiuDg31t/bJLKidcna39PHcjT4ewpFOhdMo309VMjecvpQ
a/Po6OiEytNYdd+tGYwaL9FgPamSwlwN9B9PlBbk8ixoLaG/rYaniM6GkmAw
ONJZVZRZiGbDge48BdxeeeXy/MSA3eacnx5aXphVecE80+d0OjVZEYKO/v4e
tBqNCzVW5oecS+MTA16fTwNSCNRMX5fLvNTYOcAx1EB7s4JMw00LLOI9JrDQ
3dXrWJ6pKCllGaqpKJ2XFa/X4bAscnR0rL/TZVm5nHLS6XZEnHa3w8oSIcfS
bMTrkpkgGfDZrCYi4HWZ5hkGi5sSKc46nZ9WwHFMe2UGGYqQwdDq4iwVddvM
I9UlJRwRjbosNrOJZYKn9u6xWle9bpvOBSKegGPFzFJhUO9uq9VmWtDFUFdd
ccDtXVk1SXwig3fToPStQdLBDYjUFuSxgUhVVZ19YW5pYQo5GKyntaXVH44w
gdXSyxc5wV90ORM0inp1agvgJoW807s/1esrh3/6Y/bF55V33zI/9rDutvnM
ZlRhzZl39ojXzai6jt2k4NFP34+GQnv27PH6gvd97/eg2sAZKzr4wczq7Oz0
lMs26+mrefTHP3/0yedXTCufvfXGUHv7O2++UVVeNN4/YpucLM3KOvrhjtqy
5qqS0tn2sSd/9uOcS5cOncv+8K3nm0sbV+2R6fkllQ0+8Dd/fObA50szC+kn
Pqsrys68lDnY1/eDv/hOf2nVb37y752tDe+99KLfbvnhX3xnrLXroV//xr08
+9Zjj9msqx899tvytIKM9EsPPvKrsdlZigy/ct+v0s9fLq/tkCTVsVj33hPP
tZR0Xjh3qeHkvmMHv8gvy65uGhFVVVC/4VGvGxBYXZGXZkanJsZADQY95unx
YbzhD93WUsaxxFh/zdzMzNJEX3NlK4e2AkJKz2UaG2hvmuqr84QYl3V5enxS
YiLdTcWyrC1ODldeSff6CQmcIoUYbaqpyCyyrnqqq6rB3eEj/p7aaspr6x4a
F3m+qb5SUG5FYPFiHyHU01A8PNBjmZqYXZgpr2kVCV97bYFtZRas6khvq3vV
kn3pfDAarMnOnJtdoAjP8khv7uV0t3m6ICtnfKS3ojDfPD1alF+IFmAqVGnu
paDD3N3d3F5xJej0FuZcti/PFeXkO82jbVWNbDRclHpytK97fHzi+Cc750cH
szMvOn0rtQXZVtNCcUGB17XaXle9MjfX3d7RXlvS11A3MDKqCDKOyOg1I3ub
BFZlArX5F/v7RgRJbq8qLMxOpygV9SDnrSwqaKoto0K+lM9251w42T++JMj6
tcI08JzDwfDnR/ThAf3EYfOvfu2+/0H90gXd53RZTPiaQGdJ6kDPGEr+F6Jy
aOUf/vuf/Ohnv/irP/+vqw774z99yBXkeSl08O23aMI319tuWfasdPZ01w3y
Cuebn7hwPA3oe2Tv7tbqwt6O7tWRsdKsnJO7PnU5A/VlOXP1bT/56z8dH5kc
Nwd3vPOaz+6ibHNz/TMBUvzRn/5fb7z1hqJLB9/8IBJmLVPd/ZW5//4PP6RD
7FsP3B90edNPfOmYGX/w334nR5jPX33eNTZ47uApIrD0zu9+MtU7vWg2Tc9N
vfjyK6MTDa898vup0alZkz0QJayTTZUX8/VQ+NDHO5rPnpkcNntsltL886KK
woqNs353CVTNPD/iMC9yaFEzvzTWEQ4GdUWV6EhrUzXHEANtladPHrt09tjR
fQdMy8sSG3WYpxbnJiVOtEx0rFj9C7Pji7NjnY3FVDjMcyiZRyI8HR1tuqyx
Uc94bzsX8rS0NHFovXe0r62Ji0bEiK+lvUlmqK7WJvGqmXLbAF5+q6pcT31+
R0sbS3iKsnMm5hd9lrnx3g5FIJsa64a6m92r5pLcbI4j6vJyohGqva3KOT9R
mlfsMk/Pj81QPmdnS5MiE/mXMlBOu0IW5abKnNzd1lCUesrv8EGZisj0NJZG
fcvDbX1M2FdXlO6xWII+/4n9e0mCbawqsix0Nda2aKLQVVe5NDZkXjIrIj/U
WtpTW3L+5Bma5yEy0hQ6NmR9WwVWgUCbi3Y0VI/19w8PTobdjrqacjQyIPiO
7dszOm1VWaLw0gVJjhZk5ED0pl1jxgQElgzW7ftUj3p00xRVWqL3D+jWZZ2J
uszLeEyP1iNLZ/a9/8qzTx744lBpYc7k0JDM07ODnYWlxSszw+++/vQrLz9d
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
9LED+2FPJS0qC9McXAqajhIWYCt2ttYGUIc+JRUmvXcCK6VMYgr3GOrKxwcn
eZEeNLX2dOrxBA7PWzbcbeqRwBHERK+d+qKrvaWhpgURtd0a6STIajg6/NZ7
anPD1JOPxp76LfXai9F3t6ohr9O+BqNbArk4M8xE4zW5uZdPn9TrW021uY/d
/7PhGdvM2NDxz7L8Ln80YLl0cn91RUPCn6zKudZQUTli1F04mRUMhI9/uhNb
8bNsYq673re4xiaCV08fMBmbZdicjtCX5Fw6caCjtztCLB1/65OzJ7JX7D6Y
GU9t1P+pZLV5wFUuIdDhuooyhRNUFm+tL+eA4hDJbn0jQePjA6ZgMDRkqKur
qGdgcycc+okqV110zTwy4vX5rIuzq+ZpUWDNs0ORkE/hOcxlm5wc5yRZwbG+
+oqYx2aZX56bMy+Zp5YXFoNrZmNb9dDQNE2Hh3qMoiCs+4Zf9rYz+QJ4PvNJ
W6/J6Fic6GhoCcbwxrLSBEctTI8NGo1YPDY9rHetLp0/dsS8uLg4B347Am7S
ZGyzWlaS8QC48842ndu20tOtDwa8SJ9iNQUXqvILE7Gwrr48Hgt611a625sD
HvvogC43O8fn8ZinRrs62ikidnz/nrHBnsX5OVmSnKtz/cauaCAM7nBqsKvH
qBcEsrOlNh6ID/R18RSlHQj3XMMqYkLAfFMDkzjuLy+40mvq41gJVq6x/m6j
yWKeCVkXavLyaCJQXVIBtB/Ufbe4FOStTCYaTh+VOnU9D/yS+/AdbMc7M0/9
RvW7PDYI/pcEsr3wqm9q+vH7fupesv/mRz9mvaGTn2bhuO+5Bx9tra67ev7M
oz/9lWPF/vKjP/PYzE8//FsiTPotlvqCz6pPZJ/4eHfIEooH1nKPbwOLt333
xzZfiIJZHVxhVp/65Q+S/sWXnnotEnM9fv/90VD03W07aBkJrJCpXv9Ty8uf
esg8BgR2fKjDabUoPBV1rdiWzDARwOOG9gaaIadGesbHxwNrK+1NHVD/8ASw
cBYnehcnRiZG9L4Q5rRbF6ZGYolYv6lB4InlyeG6snKP18MLosKQ08am0uIr
Ttdaj6lrdm50xWaJe5bba6vKi5qmZwf0bY2iIGu86186xUOnqbAJNfVBfLit
aKq327MyPzs12tTRjwXt3e0d0XCwprp8ot8QWvM0lpQwHNtUUez2xEkcn5no
KbiU7bUt1JaWr1nN5ZWVQb+9vLRE4YFZSzWU59GxmLG9xdhcGw36ywqu8nS0
ouQSFnD16bvJZKw49/JId8dgf++Rvbu8bkdxfp7bvlJVXMWTeEVxjss6O9rf
hYUtPfoGY1tte12V1elmZVXUqvbudQG7IhIc7p8YnAp4l2qqqz02m0HfCWnM
aX91ce6oqVdl4xc/21l4sWBoapHkN2RJbhjAPxUVNR4f3rNXtZnpgovzT/zW
+/Qzak2lSkRDNivq9xoDZ5Z/auKFnz0hJ4Utjz+UsLm+2LGPwwLbH3sk5AKz
5XwcCCnGZr32onvF9cFzW0U8unfr1qkhQ/7VS1/s+CQ4NX/20EGMwBSW+vj1
t3BC4QXSZZnlY9E3nn9UZhM7H/s9nrCc+Gi3SsY//fQdHhLK/enF5JszBJGb
HOkOB/0CJ4AjdnbQgCUpViBDfluXQUcTUUNLWWVJbm1J7pljX1htXo/Tubo0
7XUAj0awmAcdNsfUSN/y4nS3oY0mMJ4mBOClkrFekwFYn3E3sLHbyZjX2KFb
c665HEszkxP2xcnpqSk2EfeumqcmRrQq5i97wzcnCxCeary9ytTahhHhkguX
lpZdCZ9juLeLZhL6toaJYWPEY6vIvyIKREdVKZFIdBqbPU57UUHemm1pfnqG
S4RN7e0Kj1Xm5ALbAZjZleXXgMM7NdCQe/pzn8NbWVzEiJy+tiTuXho3mEQs
UluaFw15KSJ+LGtfMhapLyt2Ly3qWwwyzxqa6+zgootzrMCMd9X06crLckui
YUqRxa+LfkSieNw/19+Lxbxt+vaQ3w3rLCRVpX15p4/1j68pLN6QlwPeVpV3
Hk8SwPncXFXBLJgKBFY8eU6N+NSATR0fVIGcBn0ql3TbliVUX6yvKvUvLLzz
wptsgnt/64t0KPLEAw/UlBbXZp/4zv/1D3v27uzX1X7vO3/3wk9+YLV5Pnnz
A2Dr7nr3nQd/+q/VxcUXPvt8qL7h7/7m//6r7/z1+TOnbEsL/+07/5S1c1f2
iUNRu3P321uAP7Ln1bfiUfuWx57+57/5x77eafEvGYW42WDZZHnx5SOH9uVc
vMTRhK66nGcZBo/oW+qTAe+p4wenx8dQLjXZb2xXGbyxtKSuquSLg1nZZ76I
h925Vy62NVRbF+f27tt55OC+vi59Sf7Vk5/vj/h8Gshc31R95vgh4AJVlJUI
dKKyrLC2ppLF8ZxzZ84fPcJzkiLSdyCwN+6xFADGtzwBfDRFoLqqyyPxOPhT
XWnRqS+ORf3R2YnRsMfbWF0iS5S+sZrGk/MzY2dPn6goLXYD5To7Q8T8Qz3d
Kg9s6TLg9QIntLG+nGV4hQrVXDkXjScGuzsPZ+1ZnJ5SKLLg4nn36mJHc+2R
z/aZjLpjn2VdOnPG2NKm0HSXvvXoZ/tdlmVgAxTkXz58OIvD8f4uXcLtzL9a
EI0kEMLqa/DCgMAS4fnRQUnABwy60yeOcjwPexmToZGerqEuw4Cp7dTB/Yf2
7wCPAP5yGz+a4zmViE9eugBsYDniYSIeKRziYzEiFHDZLLIWyKVpSKTJKCon
o6bqgsLRIo8i6hIpsmTIvbg6P/j+M09K8IjiRV4j3MAhwg28jaRUhgGnGUTA
Ap+ZjgEbSeQ5gSN4GgOPAPYYZAuBIQIJFjJmEuXX3epfrm0MjFiRToiwUTgH
mzjwEgy0wuAqJXMErLMDxy7iBxAZHGJgtM7sWlcLhQe/h8wAIsvDEnWUnoPt
ktlUWwrY/gxmc9Av4ZqCC6Y6QWsdT6QMMcId3rmQIrRBdwKvAL5RoEmEeqIE
EUdvEBVIWg5WXYSPJrMCiyMmDdj2CNbGQiQzp/UBB88lMQSibhMkrfUeSgKK
nNa0i1JQW2QIMoHd5GF2I4Xn4ZhU8gLGotFTS7QAafpQd3LwXxb4HSzqzsZ9
HWmdVLk6T0PCDdQPS5FgD3HEqYLmH2ZewGqiSJTW5PoW96BIHM8kOTwSD3pi
QU8k6IkH/DG/Pxb0MxSOjlYNJAw5QxBImEVUJIw2IFpYIpem+0d62gIOCwMZ
6LXmyBqUDiUHedTRG7WdSnUAR8lZ2LpL0GidCJTogTA5UdLqcah1VJU2roub
ZTLmm6WbNw1V/TkHr+T17q6IvwjmNeg0FI1NT472gBrX3DrjXJpBC+z/DCdD
JtOXavSZRifCTKXMpV5IPHNvqrmFTGMyxJ4EYeFQAEURdaOAHq5GesZfz60H
c4gpzEMGXcBrfFawP46iJaNT4pAGV0NcH3wBGXLENFdSGo0DLwtZyOj0tCAa
ogwBVGpC2OuTofdGcjNQASWFWIa3CiQF9nyXKFnMoAT/cFgvM0vrcAWIORHT
q3nTRyQ2DWNOd/HWAKgSkkQ+vQEkAvU6v4Hw6nbYCZQFg02yNJzGdR+8AZCz
jhn4ixDYm/AhmyHEbjGxm7FKsmkYjKB9FlGCpCFDfBpmcG+9uTQqQPv2FHjy
xrchLJOkwYMzMKS0js6AV9c51jJ3mDlYMiKcaU953STI13HWof/eYmNsNm+3
G39wBe/tZtA4l4C+BgOVMyDkjCxuem8SZPECP5EShBqWQIYT6gaiNQiDsydm
2ppn9pLC3+4A0SYQsvxBYr3rhS4DfMowWWVO3ZthURK7/vOGK3wrM7y3RZHd
QmB5pHZTVdKytEFgMyi+P8AGdqc3ud7sHl3/+vtPNW6Gx4VmEwL9KK1/PFNX
knGlMxZC5g1sGlTPpN6mQYhvOQmbylqmt3uGAJa+/WfvBmuX4Y6+o4vA/ptE
3HjhzHynvr/PNNjXNdzXDcZQT5fXYbv+zTecihoeG7YGhjZzClmdQfJTqDMa
r4gZWfsyOg71YREhz4wCk4mEmmrjlTLF0xKXwnGhMjEqrX/ZtG3DQsbO1MIx
66UrUqai4c9t3FxekUH+b3zD+rpov1yvn0pZUFqnbAm1xIUFbsKGTcKtw4HW
66rSE3jjuKN71gafPg0yAps24zWjLsUlmKZD1HBKN57DGlcnk74r/rrbg9qT
Swe0052RJfb6wd3AaJ169tTDZthTaWV9fF0Ci85JdsM9fMmJpdVIYOX9d9VA
CHyKjUVUFokJT/vttg3M8NQmfuX6ZPIwCABrDBnU8hsVWcAyQDGNf2Y37p9N
hwKbrDACVLLASBMgRutmvHTKfyeQmcSk6+URSx6P+sxKzAZbjkp/SgPK3kWo
8088kBui5QehyUpChDwqgJUF1IBV1qhuYUQiteH5dCmxiIqO4QepdHUAr0Cg
KZOqf5FQtRq/UTbTuzftcCE3R0Aa+c45uqGZDbOxELAkcSKLQj2Q2ppHvMTk
OqQWAt1YmSc2lBptuJ914c00cdCwxJlSTVrOlI2kinG0hvXriibtC2wQQ1ho
zKo3xTnvrUm8YWiVknAOZWHDXhV4zdKApT23m0z01GRisShHjYcXrl5aOLjf
fuwQ3d2uMphnbSUlrQqbElVJW0fovKdKhzhShvXRkUs7P43GGbCoKEIS3PHC
q46ZifqKJlVRJT5TnoOicOugUDaN/4TbgOdoEW4Paqa7abR/kqcl4BHLWv2I
xCHWRLR14VGQPH9oZ9Ad0vhMLh1++z///X+Mmp2Vlw7+8r/9VUPPpNYqUUkJ
KaESgQPvvceK6rrO/dPL4J0JrGN+PPv4ocHBoUlT+8Wj+w59dmBmalXmuah3
LvvkYaOpD4VuonWlJZIoiSIZsM9eOLqrXd9JU1R1zqmykhKG5hqKzly7dBEY
mx2N5SeOHnT5QyIU7URfe93FC+fjGBArMOesb3kO5V9oY/XF8yeO+f0xWZC/
ssAqSGUvDek9Xi/P42XFBSzHrs0MRBIE3Jk8OHmoufHusGdtpLu9pLAY8jBo
lOacRol2fTQGZa+AGJbmXQx642AG+vSNOIahqmqt/p3hYEN25CzLlMphl06d
YChG0nhUYBtxCr2gZXQsKEKyz9CYCMVkzTYTMqL9NQiswHhXR88d33/80NHT
p67BVqdseLC7FwLJGOzcZ7tOf36oZ3ACMpvdaoY1KysZ7zy8X9C1Lrz4gvOp
34RefDzx8YdqwBlyIIGVKDIZjofcbvsSEfW7VhdFhlQ42rFi9jqtwLJi8Zhr
deDcq2+uRRhnNGBbMau8bfuvn2cTcixGRfy+iMvhti2rnCRTSZdt2W1bUfi0
puOZkNvhslrADAe9rlXLEk4GFjrL9M09jsVVkSRxDKLIqKAPnA8kFuaphHV1
kUl6z+57f2lq2edaY/gIScXZyFpDUWmSoFnCfPrjUzIsf2Q8jiWPYznit6tU
eNfLWxcsHiwek65TwX8mg6cFKgoUa31lOcdBoHhrTRlHQWdh0NhOUQljYxWW
wBdGDaW5peBcAoaKRCdULlZflmNdGltzeOYnRi1LZolmneYpl9vHMwSHhfuH
+lVRVqm4qb4M87nmJqexOCbxRMJtMbQ0KrAvXkzAA7MT44oopTkHvkIXDOgU
M2HL6PBgwL3UUF5KklR/XRnBS0Qimgj5GBqfHe7wrVmLrl6MR2NMNB4P+Vka
i4XceAJTWIJORhNhL0diyaCXplHPZQGvzjtbnl9Nk4SpqRx8isQjCb+TwcNx
r93Y1MqxIpWIh7xOcBydOrA7EgyQCQzcDJOIx4IuikoCccaigajPLQqxrvaq
uA/s8IjAMqKQicl/LQKrHTuWmeFQKCHJksr6+wwmDKPYmK8+76rKJUuvFTMM
jwTkFi4kENioL3l4t2psWnjoAfHNV9RDO1deeEYNegKuFUSvETXmHNu3ZesX
B7Yd2PP+xYvZ2VW64jO7Gi8fOXrgyKo1cvjDNwbbal/+0TOuMPHpK79pL2+q
6dBt+c1zYc9q2cmrp7fvLDp26vU3d8x6/K898h8tlbl///ffdwZUiqM4Jrk8
Y7i2/5WJ0cEQmzzw5sOdzY07s07PGao+ffHZktzSqryyAwcOOW0jb//ujTVf
uLA4++1H7xuurjib13h0/6cX9mV9lnVuxhGnpERtwam50bnZycF3n75/zsVA
Zldu7bF//C+6q7m/ePhZIk49/c9/19/a/OiL7+OUuqGQ6ps3Nqsshn4ZRwUc
08Pd3cCoSEQDc5MT0G7hiO7ONorj5kf0i9bliVFjW4OREVUFHlhcNODoa2ma
HWkLhuIuq31uZgJYwv0dzSIvzE2OVBVeBuebKsjAAxo1thRevBj3+kqKiiCx
vIC3tzTJkqjw+KC+KeIJKekQ4ld6KM11TfS3185N9tnGh91OW2tNHUmEW6pz
Fqem29o6Jgfb/WvW/AvZ/oC/sahofmKSSPrXVqaKiorclrm8K5cGTcbq0pKp
ge7apkYOWEpCsrH4StDlHRzsMTWWxIPh+sIc29xEUWmF3TzaVltPJglTXcnS
9NTswsLp3Z8sjA5cupKPRYMNxWeWZ+ZqquqjwdW+pprZ8YnOgcHO1rqJ/oGB
nhEW2OwwQ/p1JhTgxclhfQMwAuF8ct7OphpdfTER9J3et+fiqSNmq1UAiwLf
fCuBpdWof+qjbepIN5u12/PIb6wP/lI9dUoN+wKuVRQEjphyT9tHlxbHW1oa
DFTQdSXr4I7XdscT6vRoc3NzaVbWXmDPnnvzveXl0d/e9928a7mmMcNbD/4u
6rGUnrhyYvt+z6J3pLKoyzjw/OO/I2nipZ//JmlzV+dc6NEPVefn2e1xUlVC
1pbyUwUCRZ47eWjKWNllHEsGnBVX9+7dvafywvnL50+0tbWsjg/87Dv/Z9nl
/Lr2kc/27XXaY3P6El137dWyq7OTIwLYqDTGBOaO7j5EsqrKhB757//CxOi9
Lz6XsHs+euktmqJPfvj7ZBKXhfXA9Z/FUATMbZ1fnBiRwUGkCCtTA+FIEkol
hxvbdTTFjHc35ly5UlVRfPqLMysOL8PigTXw9gGZ5pan9cEgZjfP2pbG+00t
QZ9XYTmVweMBi6FbJ8k8GfWO93YQMUdvdw9NwWIWlYm3tdRLIjnWb3StWoGk
Zqqhv8r986iOTMQH20q7OzuSfntTZcHg9FzEa5scnhL4RJuucWqwM+zxVhYU
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
8ZnY+N+cjDhqh4zfKckd4QMx/oOqrvo+//BSpmF0pm0s6ohLV9pcrjWuwmwf
WsyVt/V9WN3rRnuu2CM8+MSPKjqbB/yWcbrDudjuD/sYucO9YJmiwLvZFtjq
wSkMxuKSay2z7/QNNPsU71tNl3UFTYsZcASOWGFkdq3DOX3mxrAnJl1qsXt2
GZPPprCGx1Qd68kKS9AcWjp/o9sR4T6s6oQQvS241hpYcazy1QO+vuDK4Yu1
PZO0ZTze5lsdXinc9C32zqdAwvsWNpu8SwMLqRbPsmU5CwobZPInKmo/uNxq
XxeuNHY5FlID88xN78rgUrrd6TlZZRlZKljnEnWOeVc0/9K7H+GNU7QzJvfN
0o2uJcdawb3Bd/rCLa5ZeyRf1tI7NMU2B2Pgbpzohr6I5ffcTuDiwRYJPrZw
8kqLN8L7Kf5UdVdvYKVmaHxgljrb6QGvNxlPX+vwDcxkRueoD680hWKFo9cs
EBrZWT2UlsmRrDuLTpICc9jkcJILrCVrTp1Th/tdP/zHzN5nxH0vTz/2I52K
+8dmxihxgkq/frK8Zyn/2tv7Tl2ruezKvnmlqdEze3147PdvHGkbXXrwpy/U
dHmeeP6olcr87//zk55Q7q9+sOfwWdPeY9f+c+/LN7q8Dz7ydPNk+Ls/eLzd
tf69X7xsD7M/feK1t05Vvlbe/Pj+Y61jsdGYbvau/+Hw8coe60cNFvvC8q+O
N7mj0sGPL9x0LZuHh3/0yxfPDa5bE1IokXjkof+obJ/9l//8L3d48y/++p+b
bfMP/vy14Q0Mlr4BHvauFIiLXkZuso832Kerumz9C5tdvmVTcMMflS+1WL0R
oWHI32idb7PPnmn0QMgBgbGDksye2erBYEPvoHluq3ssVmcdd65mr7UP+qJi
uz30UV3vwApHZk9yiBH3na4D7tnjhfp+z8B4tLInCDPWmwMDZxoG7NPr5S2D
EFiWdwxBpO36HHPYncDSxwqXTebqAW+3Y6bdPXemxeFZYy+3DJonNz5ustb1
uwfH1o6WtTjWsqcrW0w+yr0hNzsmDl2oHwyGj11p77SPnaqxdPsXDldaIFz3
s/nj1xusU5ErPf4Ldd222fixssaR2fUTl2/2TiyVt9j9q9xH5a01/d4G68Tr
b5/scK+8e6m5fy7y4bX2/unYiaqbtulwTWdoILhU0+W+0tRX3dTf7ImPYr+U
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
    "], {{0, 113.23584551931009`}, {236.2204724409449, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{96.012, 96.012},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{236.2204724409449, 113.23584551931009`},
  PlotRange->{{0, 236.2204724409449}, {0, 113.23584551931009`}}]], "Input",Exp\
ressionUUID->"78c656dd-8d30-4722-85c8-da905287a5f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Homogenn\[IAcute] veden\[IAcute]", "Subsection",
 CellChangeTimes->{{3.9010184856564965`*^9, 
  3.9010184936704984`*^9}},ExpressionUUID->"3a528b40-c171-4e4f-9118-\
71ff5a7ed693"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.90101852639629*^9, 3.90101852639729*^9}},
 CellLabel->
  "In[449]:=",ExpressionUUID->"ce9424bf-e4df-4dce-874e-078b46bf7c7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\[CapitalRHacek]e\[SHacek]en\[IAcute] soustavy \
line\[AAcute]rn\[IAcute]ch diferenci\[AAcute]ln\[IAcute]ch rovnic", \
"Subsection",
 CellChangeTimes->{{3.9010190544673004`*^9, 
  3.9010190753901*^9}},ExpressionUUID->"e67e73e3-f67e-4b85-9cf6-b8008a3c2b81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "]"}], ";"}]], "Input",
 CellLabel->
  "In[450]:=",ExpressionUUID->"ad45797c-ca20-4cb6-b5e3-193365f8edbc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rov1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"y1", "'"}], "[", "x", "]"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"a", " ", "*", " ", 
      RowBox[{"y1", "[", "x", "]"}]}], " ", "+", " ", 
     RowBox[{"b", " ", "*", " ", 
      RowBox[{"y2", "[", "x", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rov2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"y2", "'"}], "[", "x", "]"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"c", " ", "*", " ", 
      RowBox[{"y1", "[", "x", "]"}]}], " ", "+", " ", 
     RowBox[{"d", " ", "*", " ", 
      RowBox[{"y2", "[", "x", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"DosazY2", " ", "=", " ", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{"Rov1", ",", " ", 
     RowBox[{"y2", "[", "x", "]"}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.90101910427466*^9, 3.9010192030392256`*^9}, {
  3.90101929531008*^9, 3.901019300059103*^9}},
 CellLabel->
  "In[497]:=",ExpressionUUID->"6ac3f342-7b8a-42e2-8e48-b9516c5a1653"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"y2", "[", "x", "]"}], "\[Rule]", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "a"}], " ", 
      RowBox[{"y1", "[", "x", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["y1", "\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "b"]}], "}"}]], "Output",
 CellChangeTimes->{3.901019204887725*^9, 3.9010193033590155`*^9, 
  3.9011018170633173`*^9, 3.9011023153900833`*^9},
 CellLabel->
  "Out[499]=",ExpressionUUID->"43ce664f-7eaf-4b79-8f97-467b1035460e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dosaz", " ", "=", " ", 
  RowBox[{"Union", "[", 
   RowBox[{"DosazY2", ",", " ", 
    RowBox[{"D", "[", 
     RowBox[{"DosazY2", ",", " ", "x"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.901019273757589*^9, 3.9010193332741184`*^9}},
 CellLabel->
  "In[500]:=",ExpressionUUID->"0cd511a7-ef5c-447a-b1b1-a983570beb85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"y2", "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "a"}], " ", 
       RowBox[{"y1", "[", "x", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["y1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], "b"]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y2", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "a"}], " ", 
       RowBox[{
        SuperscriptBox["y1", "\[Prime]",
         MultilineFunction->None], "[", "x", "]"}]}], "+", 
      RowBox[{
       SuperscriptBox["y1", "\[Prime]\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], "b"]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.901019335631708*^9, 3.9011018202793436`*^9, 
  3.901102323570139*^9},
 CellLabel->
  "Out[500]=",ExpressionUUID->"bec69fab-cc82-434d-bd3e-f838355972ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rovn", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Rov2", " ", "/.", " ", "Dosaz"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9010194272032113`*^9, 3.901019444151372*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"818d4e5c-04e5-4161-8c91-b00a3ea719ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "b"], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"b", " ", "c"}], "-", 
        RowBox[{"a", " ", "d"}]}], ")"}], " ", 
      RowBox[{"y1", "[", "x", "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "+", "d"}], ")"}], " ", 
      RowBox[{
       SuperscriptBox["y1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["y1", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], ")"}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.9010194456356444`*^9, 3.901101823267767*^9, 
  3.901102327928881*^9},
 CellLabel->
  "Out[501]=",ExpressionUUID->"bc9cace3-ceb4-471e-bc6e-46172b988cf9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"VysledRov", " ", "=", " ", 
  RowBox[{
   RowBox[{"Numerator", "[", 
    RowBox[{"Rovn", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}], " ", "==", " ", 
   "0"}]}], "\[IndentingNewLine]", 
 RowBox[{"VysledRov", " ", "/.", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Derivative", "[", "n_", "]"}], "[", "y1", "]"}], "[", "x", 
      "]"}], " ", ":>", " ", 
     SuperscriptBox["\[Lambda]", "n"]}], ",", " ", 
    RowBox[{
     RowBox[{"y1", "[", "x", "]"}], " ", ":>", " ", "1"}]}], 
   "}"}]}]}], "Input",
 CellChangeTimes->{{3.9010196497615895`*^9, 3.901019677177349*^9}, {
   3.9011010790691104`*^9, 3.9011011768426094`*^9}, {3.9011017332099*^9, 
   3.9011017507314153`*^9}, 3.901101874394565*^9, {3.9011022259419804`*^9, 
   3.9011022497838984`*^9}, {3.9011022940888815`*^9, 3.901102299160755*^9}, {
   3.9011023917294955`*^9, 3.90110243973328*^9}},
 CellLabel->
  "In[508]:=",ExpressionUUID->"3da37210-89fa-457d-917f-8f657b0528d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"b", " ", "c"}], "-", 
      RowBox[{"a", " ", "d"}]}], ")"}], " ", 
    RowBox[{"y1", "[", "x", "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "+", "d"}], ")"}], " ", 
    RowBox[{
     SuperscriptBox["y1", "\[Prime]",
      MultilineFunction->None], "[", "x", "]"}]}], "-", 
   RowBox[{
    SuperscriptBox["y1", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.9011005538946204`*^9, 3.901101110021412*^9, {3.901101751751912*^9, 
   3.901101761295723*^9}, {3.9011018265343056`*^9, 3.9011018315408716`*^9}, 
   3.901101876360613*^9, 3.901102301930852*^9, 3.901102334092698*^9, {
   3.9011023762293625`*^9, 3.901102440362268*^9}},
 CellLabel->
  "Out[508]=",ExpressionUUID->"1f37b0fb-ebd7-44af-b792-91f57075c1d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"b", " ", "c"}], "-", 
   RowBox[{"a", " ", "d"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "+", "d"}], ")"}], " ", "\[Lambda]"}], "-", 
   SuperscriptBox["\[Lambda]", "2"]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{
  3.9011005538946204`*^9, 3.901101110021412*^9, {3.901101751751912*^9, 
   3.901101761295723*^9}, {3.9011018265343056`*^9, 3.9011018315408716`*^9}, 
   3.901101876360613*^9, 3.901102301930852*^9, 3.901102334092698*^9, {
   3.9011023762293625`*^9, 3.901102442161318*^9}},
 CellLabel->
  "Out[509]=",ExpressionUUID->"0845ca6f-080c-4d16-adb7-ccb07da8c77c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{
   SuperscriptBox["y1", "\[Prime]\[Prime]",
    MultilineFunction->None], "[", "x", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.901101035393592*^9, 3.901101044960532*^9}},
 CellLabel->
  "In[460]:=",ExpressionUUID->"643a616b-c9b1-48fa-a78d-3702310ed778"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"Derivative", "[", "2", "]"}], "[", "y1", "]"}], "[", "x", "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.901101047083578*^9},
 CellLabel->
  "Out[460]//FullForm=",ExpressionUUID->"d0b9448a-16bb-4aba-b0c4-\
2e16ba74f2c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CoefficientArrays"}]], "Input",
 CellChangeTimes->{{3.9011024935038643`*^9, 3.9011025072109675`*^9}},
 CellLabel->
  "In[510]:=",ExpressionUUID->"ac14a7a9-e4e8-4dc8-be89-9abaec000f76"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/CoefficientArrays",
              ButtonNote->"paclet:ref/CoefficientArrays"],
             "\"paclet:ref/CoefficientArrays\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CoefficientArrays\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"polys\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"vars\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the arrays of coefficients of the \
variables \\!\\(\\*StyleBox[\\\"vars\\\", \\\"TI\\\"]\\) in the polynomials \
\\!\\(\\*StyleBox[\\\"polys\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", 
                    "paclet:ref/CoefficientArrays", 
                    "paclet:ref/CoefficientArrays", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/\
CoefficientArrays.html"], None}, 
                    "http://reference.wolfram.com/language/ref/\
CoefficientArrays.html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"\<\"Symmetric\"\>", "\[Rule]", "False"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`CoefficientArrays\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/CoefficientArrays",
              ButtonNote->"paclet:ref/CoefficientArrays"],
             "\"paclet:ref/CoefficientArrays\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"CoefficientArrays\\\", \\\"[\\\
\", RowBox[{StyleBox[\\\"polys\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"vars\
\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the arrays of coefficients of the \
variables \\!\\(\\*StyleBox[\\\"vars\\\", \\\"TI\\\"]\\) in the polynomials \
\\!\\(\\*StyleBox[\\\"polys\\\", \\\"TI\\\"]\\). \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"CoefficientArrays\", \"[\", RowBox[{StyleBox[\"polys\", \
\"TI\"], \",\", StyleBox[\"vars\", \"TI\"]}], \"]\"}]\) gives the arrays of \
coefficients of the variables \!\(\*StyleBox[\"vars\", \"TI\"]\) in the \
polynomials \!\(\*StyleBox[\"polys\", \"TI\"]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/CoefficientArrays", "Web" -> 
      "http://reference.wolfram.com/language/ref/CoefficientArrays.html"|>, 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> {"Symmetric" -> False}, 
    "Attributes" -> {Protected}, "FullName" -> "System`CoefficientArrays"|>, 
   False]]], "Output",
 CellChangeTimes->{3.9011025086352873`*^9},
 CellLabel->
  "Out[510]=",ExpressionUUID->"13b7f9e1-26b7-4740-b48a-d47fc265bf14"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Thread"}]], "Input",
 CellChangeTimes->{{3.901105126018847*^9, 3.9011051274226227`*^9}},
 CellLabel->
  "In[555]:=",ExpressionUUID->"9603a749-d97e-407e-acf1-6b9382e48566"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Thread",
              ButtonNote->"paclet:ref/Thread"],
             "\"paclet:ref/Thread\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Thread\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"[\\\", StyleBox[\\\"args\\\", \\\
\"TI\\\"], \\\"]\\\"}], \\\"]\\\"}]\\) \\\"threads\\\" \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) over any lists that appear in \\!\
\\(\\*StyleBox[\\\"args\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Thread\\\
\", \\\"[\\\", RowBox[{RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"[\\\", \
StyleBox[\\\"args\\\", \\\"TI\\\"], \\\"]\\\"}], \\\",\\\", \
StyleBox[\\\"h\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) threads \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) over any objects with head \\!\\(\
\\*StyleBox[\\\"h\\\", \\\"TI\\\"]\\) that appear in \
\\!\\(\\*StyleBox[\\\"args\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Thread\\\", \\\"[\\\", RowBox[{RowBox[{StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\"[\\\", StyleBox[\\\"args\\\", \\\"TI\\\"], \
\\\"]\\\"}], \\\",\\\", StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) threads \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\) over objects with head \\!\\(\\*StyleBox[\\\"h\\\", \
\\\"TI\\\"]\\) that appear in the first \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\
\"]\\) \\!\\(\\*StyleBox[\\\"args\\\", \\\"TI\\\"]\\). \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   TemplateBox[{
                    
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Thread", 
                    "paclet:ref/Thread", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"], "\"  \"", 
                    StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False], 
                    "\"  \"", 
                    TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Thread.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Thread.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Thread\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Thread",
              ButtonNote->"paclet:ref/Thread"],
             "\"paclet:ref/Thread\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Thread\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"[\\\", StyleBox[\\\"args\\\", \\\
\"TI\\\"], \\\"]\\\"}], \\\"]\\\"}]\\) \\\"threads\\\" \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) over any lists that appear in \\!\
\\(\\*StyleBox[\\\"args\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Thread\\\
\", \\\"[\\\", RowBox[{RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\"[\\\", \
StyleBox[\\\"args\\\", \\\"TI\\\"], \\\"]\\\"}], \\\",\\\", \
StyleBox[\\\"h\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) threads \
\\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) over any objects with head \\!\\(\
\\*StyleBox[\\\"h\\\", \\\"TI\\\"]\\) that appear in \
\\!\\(\\*StyleBox[\\\"args\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Thread\\\", \\\"[\\\", RowBox[{RowBox[{StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\"[\\\", StyleBox[\\\"args\\\", \\\"TI\\\"], \
\\\"]\\\"}], \\\",\\\", StyleBox[\\\"h\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\
\\\"n\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) threads \\!\\(\\*StyleBox[\\\"f\\\", \
\\\"TI\\\"]\\) over objects with head \\!\\(\\*StyleBox[\\\"h\\\", \
\\\"TI\\\"]\\) that appear in the first \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\
\"]\\) \\!\\(\\*StyleBox[\\\"args\\\", \\\"TI\\\"]\\). \"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Thread\", \"[\", RowBox[{StyleBox[\"f\", \"TI\"], \"[\", \
StyleBox[\"args\", \"TI\"], \"]\"}], \"]\"}]\) \"threads\" \!\(\*StyleBox[\"f\
\", \"TI\"]\) over any lists that appear in \!\(\*StyleBox[\"args\", \
\"TI\"]\). \n\!\(\*RowBox[{\"Thread\", \"[\", RowBox[{RowBox[{StyleBox[\"f\", \
\"TI\"], \"[\", StyleBox[\"args\", \"TI\"], \"]\"}], \",\", StyleBox[\"h\", \
\"TI\"]}], \"]\"}]\) threads \!\(\*StyleBox[\"f\", \"TI\"]\) over any objects \
with head \!\(\*StyleBox[\"h\", \"TI\"]\) that appear in \
\!\(\*StyleBox[\"args\", \"TI\"]\). \n\!\(\*RowBox[{\"Thread\", \"[\", \
RowBox[{RowBox[{StyleBox[\"f\", \"TI\"], \"[\", StyleBox[\"args\", \"TI\"], \
\"]\"}], \",\", StyleBox[\"h\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \
\"]\"}]\) threads \!\(\*StyleBox[\"f\", \"TI\"]\) over objects with head \!\(\
\*StyleBox[\"h\", \"TI\"]\) that appear in the first \!\(\*StyleBox[\"n\", \
\"TI\"]\) \!\(\*StyleBox[\"args\", \"TI\"]\). ", 
    "Documentation" -> <|
     "Local" -> "paclet:ref/Thread", "Web" -> 
      "http://reference.wolfram.com/language/ref/Thread.html"|>, "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected}, "FullName" -> 
    "System`Thread"|>, False]]], "Output",
 CellChangeTimes->{3.901105127922964*^9},
 CellLabel->
  "Out[555]=",ExpressionUUID->"07ba3afa-cd46-40bc-879b-b386a5c23e72"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"CoefficientArrays", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"A", " ", "+", " ", 
       RowBox[{"a", "*", "x"}], " ", "-", " ", 
       RowBox[{"b", "*", "y"}], " ", "-", " ", 
       RowBox[{"c", "*", "z"}]}], " ", "==", " ", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"B", " ", "+", " ", 
       RowBox[{"d", "*", "x"}], " ", "+", " ", 
       RowBox[{"e", "*", "y"}], " ", "+", " ", 
       RowBox[{"f", "*", "z"}]}], " ", "==", " ", "0"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"vect", ",", " ", "mat"}], "}"}], " ", "=", " ", 
  RowBox[{"%", " ", "//", " ", "Normal"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", " ", "/@", " ", "%"}], "\[IndentingNewLine]", 
 RowBox[{"Thread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"mat", ".", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], " ", "+", " ", 
    "vect"}], " ", "==", " ", "0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.9011025131149397`*^9, 3.901102549678316*^9}, {
  3.901102600567336*^9, 3.901102648293911*^9}, {3.901102685777432*^9, 
  3.9011027452248993`*^9}, {3.901102780596526*^9, 3.901102868790823*^9}},
 CellLabel->
  "In[527]:=",ExpressionUUID->"8e9235fe-1f53-4b8c-b6e5-97ab65b8b10f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {
                  8.151761419745162, {0., 8.151761419745162}}], Appearance -> 
                None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{{0.5, 0., 0.}, {0.5, 0., 0.}}}, {{0, 0}, {2, 1}}, {
                0, 1}], AspectRatio -> 1, Axes -> False, Frame -> False, 
               FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
                 "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "2", "}"}], "SummaryItem"]}]}}, AutoDelete -> 
               False, BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{{0.5, 0., 0.}, {0.5, 0., 0.}}}, {{0, 0}, {2, 1}}, {
                0, 1}], AspectRatio -> 1, Axes -> False, Frame -> False, 
               FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
                 "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "2", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", "1", "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "A", BaselinePosition -> Baseline, ContentPadding -> 
                    False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", "2", "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "B", BaselinePosition -> Baseline, ContentPadding -> 
                    False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}}, DefaultBaseStyle -> 
                    "Column", GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[
    Automatic, {2}, 0, {
     1, {{0, 2}, {{1}, {2}}}, {$CellContext`A, $CellContext`B}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"], 
                 ImageSizeCache -> {
                  8.151761419745162, {0., 8.151761419745162}}], Appearance -> 
                None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{{0.5, 0., 0.}, {0.5, 0., 0.}, {0.5, 0., 0.}}, {{
                0.5, 0., 0.}, {0.5, 0., 0.}, {0.5, 0., 0.}}}, {{0, 0}, {3, 
                2}}, {0, 1}], AspectRatio -> 1, Axes -> False, Frame -> False,
                FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
                 "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "SummaryItem"]}]}}, 
               AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True -> 
          GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 Appearance -> None, BaseStyle -> {}, 
                ButtonFunction :> (Typeset`open$$ = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               
               RasterBox[{{{0.5, 0., 0.}, {0.5, 0., 0.}, {0.5, 0., 0.}}, {{
                0.5, 0., 0.}, {0.5, 0., 0.}, {0.5, 0., 0.}}}, {{0, 0}, {3, 
                2}}, {0, 1}], AspectRatio -> 1, Axes -> False, Frame -> False,
                FrameLabel -> {None, None}, FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameTicks -> {{None, None}, {None, None}}, GridLinesStyle -> 
               Directive[
                 GrayLevel[0.5, 0.4]], ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], 
               Method -> {
                "GridLinesInFront" -> True, "AxisPadding" -> Scaled[0.02], 
                 "DefaultBoundaryStyle" -> Automatic, 
                 "DefaultGraphicsInteraction" -> {
                  "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                   "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                 "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                 Scaled[0.02], "RangePadding" -> Scaled[0.05]}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["6", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["1.`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "a", BaselinePosition -> Baseline, ContentPadding -> 
                    False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "b"}], BaselinePosition -> Baseline, 
                    ContentPadding -> False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    RowBox[{"-", "c"}], BaselinePosition -> Baseline, 
                    ContentPadding -> False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "d", BaselinePosition -> Baseline, ContentPadding -> 
                    False, FrameMargins -> 0, 
                    ImageSize -> {{1, 300}, Automatic}, StripOnInput -> True],
                     LineBreakWithin -> False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, DefaultBaseStyle -> "Column", 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, AutoDelete -> False, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, AutoDelete -> 
            False, BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[
    Automatic, {2, 3}, 0, {
     1, {{0, 3, 6}, {{1}, {2}, {3}, {1}, {2}, {
       3}}}, {$CellContext`a, -$CellContext`b, -$CellContext`c, \
$CellContext`d, $CellContext`e, $CellContext`f}}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.901102553350095*^9, 3.9011026136585646`*^9, 3.9011026496224227`*^9, 
   3.901102749208087*^9, 3.9011028037093906`*^9, {3.90110284912496*^9, 
   3.901102869639908*^9}},
 CellLabel->
  "Out[527]=",ExpressionUUID->"38fc7c69-1f45-4e1a-918f-a2d33abf0e7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"A", ",", "B"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", 
       RowBox[{"-", "b"}], ",", 
       RowBox[{"-", "c"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.901102553350095*^9, 3.9011026136585646`*^9, 3.9011026496224227`*^9, 
   3.901102749208087*^9, 3.9011028037093906`*^9, {3.90110284912496*^9, 
   3.9011028722615185`*^9}},
 CellLabel->
  "Out[528]=",ExpressionUUID->"e4f4b423-3819-458b-aba5-31b9fa0e4386"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"A"},
        {"B"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"a", 
        RowBox[{"-", "b"}], 
        RowBox[{"-", "c"}]},
       {"d", "e", "f"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.901102553350095*^9, 3.9011026136585646`*^9, 3.9011026496224227`*^9, 
   3.901102749208087*^9, 3.9011028037093906`*^9, {3.90110284912496*^9, 
   3.901102875029397*^9}},
 CellLabel->
  "Out[529]=",ExpressionUUID->"c117138a-3334-49dc-aff1-cffe538d6b19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "+", 
     RowBox[{"a", " ", "x"}], "-", 
     RowBox[{"b", " ", "y"}], "-", 
     RowBox[{"c", " ", "z"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"B", "+", 
     RowBox[{"d", " ", "x"}], "+", 
     RowBox[{"e", " ", "y"}], "+", 
     RowBox[{"f", " ", "z"}]}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.901102553350095*^9, 3.9011026136585646`*^9, 3.9011026496224227`*^9, 
   3.901102749208087*^9, 3.9011028037093906`*^9, {3.90110284912496*^9, 
   3.9011028780031343`*^9}},
 CellLabel->
  "Out[530]=",ExpressionUUID->"32c4b100-0af8-48e9-8eee-f10dea1c330f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Quiet", "[", 
   RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{
  3.9021660090306845`*^9},ExpressionUUID->"389761f9-4701-4cfd-a89d-\
14969c4cc97e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rov1", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"y1", "'"}], "[", "x", "]"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"a", " ", "*", " ", 
      RowBox[{"y1", "[", "x", "]"}]}], " ", "+", " ", 
     RowBox[{"b", " ", "*", " ", 
      RowBox[{"y2", "[", "x", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rov2", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"y2", "'"}], "[", "x", "]"}], " ", "==", " ", 
    RowBox[{
     RowBox[{"c", " ", "*", " ", 
      RowBox[{"y1", "[", "x", "]"}]}], " ", "+", " ", 
     RowBox[{"d", " ", "*", " ", 
      RowBox[{"y2", "[", "x", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"Vect", ",", "Mat"}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"CoefficientArrays", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Rov1", ",", " ", "Rov2"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"y1", "[", "x", "]"}], ",", " ", 
        RowBox[{"y2", "[", "x", "]"}]}], "}"}]}], "]"}]}], "//", 
   "Normal"}]}]}], "Input",
 CellChangeTimes->{{3.9011029895498724`*^9, 3.901103021354188*^9}, 
   3.901103089612818*^9, {3.901103158991409*^9, 3.901103160017988*^9}, {
   3.9011032579395733`*^9, 3.901103262391946*^9}},
 CellLabel->
  "In[548]:=",ExpressionUUID->"b602e911-0484-4d76-be67-940075314403"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       SuperscriptBox["y1", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{
       SuperscriptBox["y2", "\[Prime]",
        MultilineFunction->None], "[", "x", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", "d"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9011030144173126`*^9, 3.901103021810766*^9}, 
   3.9011030903890047`*^9, 3.901103160777691*^9, 3.9011032634616656`*^9},
 CellLabel->
  "Out[550]=",ExpressionUUID->"ee66d8cd-07fa-4bde-8f39-e0a58bd9cd31"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{"Mat", " ", "-", " ", 
   RowBox[{"\[Lambda]", " ", "*", " ", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9011031446232357`*^9, 3.901103186969202*^9}},
 CellLabel->
  "In[551]:=",ExpressionUUID->"9bcd66a6-023e-4b08-bbde-788b6e31e587"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "b"}], " ", "c"}], "+", 
  RowBox[{"a", " ", "d"}], "-", 
  RowBox[{"a", " ", "\[Lambda]"}], "-", 
  RowBox[{"d", " ", "\[Lambda]"}], "+", 
  SuperscriptBox["\[Lambda]", "2"]}]], "Output",
 CellChangeTimes->{3.901103148709956*^9, 3.901103189366596*^9, 
  3.9011032671608467`*^9},
 CellLabel->
  "Out[551]=",ExpressionUUID->"250483fc-8e63-41e5-8676-c4f3c7f8b7bd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{598.5, 606.},
WindowMargins->{{-1205.25, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"2e4b2e1d-bc5c-435f-b89a-0d05b7472670"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 235, 4, 98, "Title",ExpressionUUID->"5433c399-b5f3-432e-9198-ec76379984c5"],
Cell[CellGroupData[{
Cell[840, 30, 186, 3, 67, "Section",ExpressionUUID->"0b44a0d2-8320-42fe-8cab-8862317df9d4"],
Cell[CellGroupData[{
Cell[1051, 37, 180, 3, 54, "Subsection",ExpressionUUID->"e9315972-3854-4db6-91d4-aa99469cfb72"],
Cell[1234, 42, 276, 6, 28, "Input",ExpressionUUID->"337147f4-d0ad-44c2-9e6f-b3b497cb607d"],
Cell[CellGroupData[{
Cell[1535, 52, 1660, 46, 161, "Input",ExpressionUUID->"ce2ff491-0928-4077-b71e-8ac137b2fd0d"],
Cell[3198, 100, 1808, 56, 159, "Output",ExpressionUUID->"3426337a-8603-4d34-978f-bd0932c9ba2d"],
Cell[5009, 158, 254, 6, 32, "Output",ExpressionUUID->"235446a2-52b5-4d64-a43b-0b9e394febcf"],
Cell[5266, 166, 423, 12, 48, "Output",ExpressionUUID->"ee783aa9-69ef-4952-b48f-3b9ce290eae2"]
}, Open  ]],
Cell[5704, 181, 304, 7, 28, "Input",ExpressionUUID->"68c210ca-8dfc-433f-9d40-caf6f3695db6"],
Cell[CellGroupData[{
Cell[6033, 192, 2728, 82, 308, "Input",ExpressionUUID->"e47c248b-5109-4db0-a203-643c715d0ead"],
Cell[8764, 276, 509, 11, 65, "Message",ExpressionUUID->"31bd8c98-aded-4281-a6bb-7b3b1c05b6f5"],
Cell[9276, 289, 53914, 903, 239, "Output",ExpressionUUID->"a3986d1e-6317-480f-8853-372caf3806c5"]
}, Open  ]],
Cell[63205, 1195, 68828, 1132, 126, "Input",ExpressionUUID->"78c656dd-8d30-4722-85c8-da905287a5f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132070, 2332, 184, 3, 54, "Subsection",ExpressionUUID->"3a528b40-c171-4e4f-9118-71ff5a7ed693"],
Cell[132257, 2337, 272, 6, 28, "Input",ExpressionUUID->"ce9424bf-e4df-4dce-874e-078b46bf7c7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132566, 2348, 262, 4, 54, "Subsection",ExpressionUUID->"e67e73e3-f67e-4b85-9cf6-b8008a3c2b81"],
Cell[132831, 2354, 208, 5, 28, "Input",ExpressionUUID->"ad45797c-ca20-4cb6-b5e3-193365f8edbc"],
Cell[CellGroupData[{
Cell[133064, 2363, 1097, 30, 67, "Input",ExpressionUUID->"6ac3f342-7b8a-42e2-8e48-b9516c5a1653"],
Cell[134164, 2395, 536, 15, 48, "Output",ExpressionUUID->"43ce664f-7eaf-4b79-8f97-467b1035460e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134737, 2415, 348, 8, 28, "Input",ExpressionUUID->"0cd511a7-ef5c-447a-b1b1-a983570beb85"],
Cell[135088, 2425, 986, 31, 48, "Output",ExpressionUUID->"bec69fab-cc82-434d-bd3e-f838355972ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[136111, 2461, 290, 6, 28, "Input",ExpressionUUID->"818d4e5c-04e5-4161-8c91-b00a3ea719ab"],
Cell[136404, 2469, 795, 25, 48, "Output",ExpressionUUID->"bc9cace3-ceb4-471e-bc6e-46172b988cf9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137236, 2499, 1011, 25, 50, "Input",ExpressionUUID->"3da37210-89fa-457d-917f-8f657b0528d6"],
Cell[138250, 2526, 896, 24, 32, "Output",ExpressionUUID->"1f37b0fb-ebd7-44af-b792-91f57075c1d4"],
Cell[139149, 2552, 638, 15, 32, "Output",ExpressionUUID->"0845ca6f-080c-4d16-adb7-ccb07da8c77c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[139824, 2572, 308, 7, 28, "Input",ExpressionUUID->"643a616b-c9b1-48fa-a78d-3702310ed778"],
Cell[140135, 2581, 386, 13, 46, "Output",ExpressionUUID->"d0b9448a-16bb-4aba-b0c4-2e16ba74f2c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140558, 2599, 213, 4, 28, "Input",ExpressionUUID->"ac14a7a9-e4e8-4dc8-be89-9abaec000f76"],
Cell[140774, 2605, 13052, 309, 199, "Output",ExpressionUUID->"13b7f9e1-26b7-4740-b48a-d47fc265bf14"]
}, Closed]],
Cell[CellGroupData[{
Cell[153863, 2919, 200, 4, 24, "Input",ExpressionUUID->"9603a749-d97e-407e-acf1-6b9382e48566"],
Cell[154066, 2925, 14936, 334, 354, "Output",ExpressionUUID->"07ba3afa-cd46-40bc-879b-b386a5c23e72"]
}, Closed]],
Cell[CellGroupData[{
Cell[169039, 3264, 1386, 34, 101, "Input",ExpressionUUID->"8e9235fe-1f53-4b8c-b6e5-97ab65b8b10f"],
Cell[170428, 3300, 19505, 404, 122, "Output",ExpressionUUID->"38fc7c69-1f45-4e1a-918f-a2d33abf0e7d"],
Cell[189936, 3706, 620, 18, 32, "Output",ExpressionUUID->"e4f4b423-3819-458b-aba5-31b9fa0e4386"],
Cell[190559, 3726, 1418, 42, 48, "Output",ExpressionUUID->"c117138a-3334-49dc-aff1-cffe538d6b19"],
Cell[191980, 3770, 658, 18, 32, "Output",ExpressionUUID->"32c4b100-0af8-48e9-8eee-f10dea1c330f"]
}, Open  ]],
Cell[192653, 3791, 229, 6, 28, "Input",ExpressionUUID->"389761f9-4701-4cfd-a89d-14969c4cc97e"],
Cell[CellGroupData[{
Cell[192907, 3801, 1395, 39, 86, "Input",ExpressionUUID->"b602e911-0484-4d76-be67-940075314403"],
Cell[194305, 3842, 748, 22, 32, "Output",ExpressionUUID->"ee66d8cd-07fa-4bde-8f39-e0a58bd9cd31"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195090, 3869, 327, 7, 28, "Input",ExpressionUUID->"9bcd66a6-023e-4b08-bbde-788b6e31e587"],
Cell[195420, 3878, 413, 11, 32, "Output",ExpressionUUID->"250483fc-8e63-41e5-8676-c4f3c7f8b7bd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

